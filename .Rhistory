length(pcr$sample_name[which(!pcr$sample_name %in%unique(lab_fu$sample) )])# 129 samples not in the lab_follow up dates
pcr$sample_mis = ifelse(!pcr$sample_name %in%unique(lab_fu$sample),1,0)
length(unique(pcr$patient_id[which(!pcr$patient_id %in%unique(lab_fu$patient_id))])) # 11 unique patients not in the lab_fu data
# Check which variables of relevance
sapply(lab_fu, function(x) unique(x))
sapply(lab_fu, function(x) length(x[x==""]))
DF = merge(DF, lab_fu[,-c(4,15:45)], by.x=c("s_num","patient_id"), by.y=c("s_num_clean","patient_id"),all.x = T)
# convert qu_ratio to numeric
DF <- DF %>% mutate(qu_ratio = as.numeric(qu_ratio))
length(unique(lab_fu$sample)) # Duplicates present in the lab_fu file, therefore multiple merges
#View(lab_fu[lab_fu$sample%in%unique(lab_fu$sample[which(duplicated(lab_fu$sample))]),])
no_dup = which(!duplicated(DF$sample_name))
DF = data.frame(cbind(patient_id=DF$patient_id,country =DF$Country.Code,
sample_name=DF$sample_name,sample_name2=DF$sample_name2,RectalDate=as.character(DF$RectalDate),DischargeDate=as.character(DF$PatientDischargeDate),as.data.frame(sapply(DF[,which(!names(DF)%in%c("patient_id","Country.Code","sample_name","RectalDate",
"sample_name2","PatientDischargeDate"))]
,function(x) as.numeric(x)))))
# ignore errors, is due to applying as.numeric to empty cells
DF2 = DF %>%
dplyr::select(-patient_id,-RectalDate,-DischargeDate,-country,-sample,-sample_name2) %>%
group_by(sample_name) %>% summarise_each(funs(median))
a = as.data.frame(cbind(patient_id=as.character(DF$patient_id[no_dup]),sample_name=as.character(DF$sample_name[no_dup]),
sample_name2=as.character(DF$sample_name2[no_dup]),RectalDate=as.character(DF$RectalDate[no_dup])))
a = a[order(a$sample_name),]
DF2 = merge(DF2,a,by.x=c("sample_name"),by.y=c("sample_name"))
length(unique(DF2$patient_id[which(is.na(DF2$RectalDate))]))
# Merge clin_main and pcr
# Check how similar clin_main and lab_main are
which(!names(clin_main)%in%names(lab_main))
which(!names(lab_main)%in%names(clin_main))
sapply(lab_main[,-c(1)],function(x) length(x[x==""]))-sapply(clin_main[,-c(1,62)],function(x) length(x[x==""]))
# lab main is more complete
length(unique(pcr$patient_id[which(!pcr$patient_id %in%unique(lab_main$patient_id) )])) # 11 are not in the main_lab file
length(unique(pcr$patient_id[which(!pcr$patient_id %in%unique(clin_main$patient_id) )])) # 1 is not in the clin_main file
# Get the 11 patients missing in the lab data from the clinical data
add_on = clin_main[clin_main$patient_id%in%unique(pcr$patient_id[which(!pcr$patient_id %in%unique(lab_main$patient_id) )]),-c(1,62)]
clinNOTlab.names <- names(lab_main)[!names(lab_main)%in%names(add_on)]
add_on[,clinNOTlab.names ] <- NA
add_on = add_on[,order(colnames(add_on))]
lab_main = lab_main[,order(colnames(lab_main))]
lab_main = rbind(lab_main, add_on)
DF3 = merge(DF2, lab_main[,-c(6,58)], by.x=c("patient_id"), by.y=c("patient_id"), all.x=T)
# Merge Abx with Abx categories
colnames(abxcat)[which(names(abxcat)== "Antibiotic.ID")] <- "AntibioticID"
abx <- merge(abx,abxcat, by="AntibioticID")
abx$StartTreatmentDate = as.Date(abx$StartTreatmentDate,format="%d-%b-%y")
abx$EndTreatmentDate = as.Date(abx$EndTreatmentDate,format="%d-%b-%y")
# Merge Abx with pcr data
abx=abx[order(abx$patient_id),]
rows = length(DF3$sample_name[which(DF3$patient_id%in%unique(abx$patient_id))])
ab_matrix = data.frame(matrix(NA,nrow=rows,ncol= length(unique(abx$Antibiotic.Name))+5))
colnames(ab_matrix) = c("patient_id","sample_name", "RectalDate","esbl_act","broad_spec",unique(abx$Antibiotic.Name))
pat_id = which(DF3$patient_id%in%unique(abx$patient_id))
ab_matrix[,1] = as.character(DF3$patient_id[pat_id])
ab_matrix[,2] = as.character(DF3$sample_name[which(DF3$patient_id%in%unique(abx$patient_id))])
ab_matrix[,3] = as.Date(DF3$RectalDate[pat_id],format="%d-%b-%y")
ab_matrix[,c(4,5)] = 0
for(i in unique(abx$patient_id)){
d = abx[abx$patient_id==i,]
for(a in unique(d$Antibiotic.Name)){
a_rows = d[which(d$Antibiotic.Name==a),]
if(length(a_rows$StartTreatmentDate)>1){
dif_t = NULL
for(p in 1:length(a_rows$StartTreatmentDate)){
dif = c(a_rows$StartTreatmentDate[p]+0:(a_rows$EndTreatmentDate[p] - a_rows$StartTreatmentDate[p]))
dif_t = append(dif_t,dif, after=length(dif_t))
}
treat = sort(dif_t)
}
else{
treat = c(a_rows$StartTreatmentDate[1]+0:(a_rows$EndTreatmentDate[1] - a_rows$StartTreatmentDate[1]))
}
b = ab_matrix$RectalDate[which(ab_matrix$patient_id==i)]
ab_matrix[which(ab_matrix$patient_id==i),which(names(ab_matrix)==a)] = ifelse(b%in%treat,1,0)
}
}
#View(ab_matrix[ab_matrix$sample_name%in%unique(ab_matrix$sample_name[which(duplicated(ab_matrix$sample_name))]),])
ab_matrix[is.na(ab_matrix)] = 0
esbl = which(colnames(ab_matrix)%in%unique(abx$Antibiotic.Name[abx$betalactamase_activity=="Yes"]));length(esbl)
esbl_p = which(colnames(ab_matrix)%in%unique(abx$Antibiotic.Name[abx$betalactamase_activity=="Possibly"]));length(esbl_p)
b_broad = which(colnames(ab_matrix)%in%unique(abx$Antibiotic.Name[abx$Spectrum=="Broad"])) ;length(b_broad)
esbl_rows <- as.vector(unique(unlist(sapply(ab_matrix[,esbl], function(x) which(x==1), simplify=TRUE))))
esbl_p_rows <- as.vector(unique(unlist(sapply(ab_matrix[,esbl_p], function(x) which(x==1), simplify=TRUE))))
b_broad_rows <- as.vector(unique(unlist(sapply(ab_matrix[,b_broad], function(x) which(x==1), simplify=TRUE))))
ab_matrix$esbl_act[esbl_p_rows] = 2 # No = 0; Yes = 1; Possibly = 2
ab_matrix$esbl_act[esbl] = 1
ab_matrix$broad_spec[b_broad_rows] = 1 # No = 0; Yes = 1
DF4 = merge(DF3, ab_matrix[,-c(1,3)], by.x=c("sample_name"),by.y=c("sample_name"), all.x=T)
DF4[,which(names(DF4)%in%c("RectalDate","StartTreatmentDate",
"EndTreatmentDate","AdmittanceDateInHospital"))] = lapply(DF4[,which(names(DF4)%in%c("RectalDate","StartTreatmentDate",
"EndTreatmentDate","AdmittanceDateInHospital"))],
function(x) as.Date(x,format="%d-%b-%y"))
DF4 <- DF4 %>%
dplyr::select(-X,-Patient..ID,-ScreeningNumber,-reps_16s,-reps_CTX,-sample_name2,-PatientStudyID, -SamplePatID)
# I've left the abx fields for the patient that presumably haven't taken abx at all (i.e. were not present in the abx data file) is NA, as I suppose we're not
# certain whether their usage is missing or really no abx was taken
# sort patient samples per patient after Rectal date
DF4 <- DF4[order(DF4$patient_id, DF4$RectalDate),]
# add num which always starts at 0
DF4$num <- DF4$s_num
DF4$num[1] <- 0
for (i in 2:length(DF4$num)) {
if (DF4$patient_id[i] != DF4$patient_id[i - 1]) {
DF4$num[i] <- 0
} else {
DF4$num[i] <- DF4$num[i - 1] + 1
}
}
# check that each patients num starts at 0
#ddply(DF4, .(patient_id), summarise, MinNum=min(num))
## Get days since first measurement
# add a column with previous date
prev.date <- c(as.Date("2011-1-1"), DF4$RectalDate[1:(length(DF4$RectalDate) - 1)])
DF4$Tdiff <- DF4$RectalDate - prev.date
# add up the differences in days
for (i in 1:length(DF4$Tdiff)) {
if (DF4$num[i] == 0) {
DF4$Tdiff[i] <- 0
} else {
DF4$Tdiff[i] <- DF4$Tdiff[i] + DF4$Tdiff[i - 1]
}
}
# check that for each patient first measurement is at 0 days
#ddply(DF4, .(patient_id), summarise, MinDays=min(Tdiff), MaxDays=max(Tdiff))
# calculate between measurement differences in the qu_ratio (first measure per patient will become meaningless)
diff.qu <- DF4$qu_ratio[2 : nrow(DF4)] - DF4$qu_ratio[1 : (nrow(DF4) - 1)]
diff.qu <- c(0,diff.qu)
# set diff.qu for first measurement to NA
diff.qu[DF4$num == 0] <- NA
# add diffqu to DF
DF4$DiffRatio <- diff.qu
DF4_check = merge(DF4, abx,by.x=c("patient_id"), by.y=c("patient_id"))
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=1500, height=1200)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=4) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_manual(name="Antibiotic ESBL activity", values=c("deepskyblue","deeppink","green"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=1500, height=1200)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=3) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_manual(name="Antibiotic ESBL activity", values=c("deepskyblue","deeppink","green"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=1500, height=1200)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_manual(name="Antibiotic ESBL activity", values=c("deepskyblue","deeppink","green"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_manual(name="Antibiotic ESBL activity", values=c("deepskyblue","deeppink","green"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
betalactamase_activity
DF_plot$betalactamase_activity
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", values=cbPalette)+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", values="cbPalette")+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Set1")+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Pastel2")+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Pastel2")+
facet_grid(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Pastel2")+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Pastel2")+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
install.packages("ggThemeAssist")
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Pastel2")+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Pastel2")+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
ggThemeAssist:::ggThemeAssistAddin()
ggThemeAssist:::ggThemeAssistAddin()
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Pastel2") + theme(axis.title = element_text(size = 9),
plot.title = element_text(size = 15),
panel.background = element_rect(fill = "gray95"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Yes",])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"No",])+
geom_segment(aes(x = StartTreatmentDate, y = -1.5, xend =EndTreatmentDate, yend = -1.5, size=0.5,colour = betalactamase_activity),data=DF_plot[DF_plot$betalactamase_activity%in%"Possibly",])+
scale_colour_brewer(name="Antibiotic ESBL activity", palette="Pastel2") + theme(axis.title = element_text(size = 9),
plot.title = element_text(size = 15),
panel.background = element_rect(fill = "gray95"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot$broad_spec
DF_plot$EndTreatmentDate
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = broad_spec),data=DF_plot[DF_plot$broad_spec%in%1,])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = broad_spec),data=DF_plot[DF_plot$broad_spec%in%0,])+
scale_colour_brewer(name="Broad Spectrum", palette="Pastel2") + theme(axis.title = element_text(size = 9),
plot.title = element_text(size = 15),
panel.background = element_rect(fill = "gray95"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = broad_spec),data=DF_plot[DF_plot$broad_spec==1,])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = broad_spec),data=DF_plot[DF_plot$broad_spec==0,])+
scale_colour_brewer(name="Broad Spectrum", palette="Pastel2") + theme(axis.title = element_text(size = 9),
plot.title = element_text(size = 15),
panel.background = element_rect(fill = "gray95"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = (broad_spec==1)),data=DF_plot[DF_plot$broad_spec==1,])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = (broad_spec==1)),data=DF_plot[DF_plot$broad_spec==0,])+
scale_colour_brewer(name="Broad Spectrum", palette="Pastel2") + theme(axis.title = element_text(size = 9),
plot.title = element_text(size = 15),
panel.background = element_rect(fill = "gray95"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
ggThemeAssist:::ggThemeAssistAddin()
summary(DF_plot$EndTreatmentDate)
view(DF_plot)
View(DF_plot)
View(DF_plot)
DF_plot$EndTreatmentDate[DF_plot$patient_id == "IT_3294"]
DF_plot$EndTreatmentDate[DF_plot$patient_id == "IT3294"]
DF_plot$StartTreatmentDate[DF_plot$patient_id == "IT3294"]
DF_plot$EndTreatmentDate[DF_plot$patient_id == "SE1075"]
DF_plot$StartTreatmentDate[DF_plot$patient_id == "SE1075"]
View(DF4)
View(DF4)
View(ab_matrix)
View(ab_matrix)
DF_plot$StartTreatmentDate[DF_plot$patient_id == "RM2337"]
DF_plot$EndTreatmentDate[DF_plot$patient_id == "RM2337"]
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = as.character(broad_spec),data=DF_plot[DF_plot$broad_spec==1,])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = as.character(broad_spec),data=DF_plot[DF_plot$broad_spec==0,])+
scale_colour_brewer(name="Broad Spectrum", palette="Pastel2") + theme(axis.title = element_text(size = 9),
plot.title = element_text(size = 15),
panel.background = element_rect(fill = "gray95"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot <- DF4_check[DF4_check$qu_ratio<1,]
png(filename="./Figures/ratio_with_abx_below1only_broadSpec.png", width=3000, height=2400)
i = ggplot(DF_plot, aes(x=RectalDate, y=qu_ratio, group=patient_id)) +
geom_line(size=1) + geom_point(size=1) + geom_hline(yintercept=0,linetype=2) +
geom_segment(aes(x = StartTreatmentDate, y = -0.5, xend = EndTreatmentDate, yend = -0.5, size=0.5,colour = as.character(broad_spec)),data=DF_plot[DF_plot$broad_spec==1,])+
geom_segment(aes(x = StartTreatmentDate, y = -1, xend = EndTreatmentDate, yend = -1,size=0.5, colour = as.character(broad_spec)),data=DF_plot[DF_plot$broad_spec==0,])+
scale_colour_brewer(name="Broad Spectrum", palette="Pastel2") + theme(axis.title = element_text(size = 9),
plot.title = element_text(size = 15),
panel.background = element_rect(fill = "gray95"))+
facet_wrap(~patient_id, scales="free_x",ncol=10)+ylab("% abundance ESBL to 16s")+ylim(-2,1)
print(i)
dev.off()
DF_plot$broad_spec==1
SDATA
##################################################
# Seaching for fingerprints of antibiotic action
##################################################
# Author: Rene Niehus
# Date: 1 August 2016
# clear workspace, load libraries
rm(list=ls())
library(plyr)
library(dplyr)
library(reshape)
# set the working directory
setwd("~/Dropbox/LOMHWRU_MORU/SATURN_ESBL/_R/R_git/qPCR/")
### My functions
# funcion that compares neighbouring elements of a data vector
Comp <- function(data)
{
output <- vector()
for(i in 1:(length(data) - 1))
{
if(data[i] == data[i + 1])
{
output[i] <- 1
}
else
{
output[i] <- 0
}
}
return(output)
}
# Load Data file
SDATA <- read.csv ("./Cleaned_data/linked_qPCR_clin_abx.csv",
sep= ",", colClasses=c("character")) # Linked Data
# turn into numerical
SDATA <- SDATA %>%
plyr::mutate(
ratio_SD = as.numeric(ratio_SD),
s_num = as.numeric(s_num),
qu_ratio = as.numeric(qu_ratio),
esbl_act = as.numeric(esbl_act),
broad_spec = as.numeric(broad_spec),
Piperacillin.tazobactam = as.numeric(Piperacillin.tazobactam),
Vancomycin = as.numeric(Vancomycin),
isoniazid = as.numeric(isoniazid),
Levofloxacin = as.numeric(Levofloxacin),
Meropenem = as.numeric(Meropenem),
pyrazinamide = as.numeric(pyrazinamide),
Rifampicin = as.numeric(Rifampicin),
Ampicillin = as.numeric(Ampicillin),
Oxacillin = as.numeric(Oxacillin),
Ceftriaxone = as.numeric(Ceftriaxone),
ESBL_Ecoli = as.numeric(ESBL_Ecoli),
ESBL_PPM = as.numeric(ESBL_PPM),
ESBL_KESC = as.numeric(ESBL_KESC)
)
# turn into dates
SDATA <- SDATA %>%
plyr::mutate(RectalDate = as.Date(as.character(SDATA$RectalDate), format="%Y-%m-%d"))
# order after rectal data FOR EACH patient
SDATA <- SDATA[order(SDATA$patient_id, SDATA$RectalDate),]
######## Some Descriptive analysis
dim(SDATA)[1:2] # 659 observations, 127 variables
head(SDATA, n = -657) # negative n means the length of cut-off tail
names(SDATA) # gives a nice list of a the variables
str(SDATA) # gives a summary like in the global environemnt
levels(SDATA$patient_id) # this is only for categorical data
summary(SDATA$qu_ratio) # gives a summery of a coloumn
# the median is 0.0077: majority of measures are close to zero. I expect that this ratio is mostly very small.
# how accurate are small values of the ratio. Look at the error
summary(SDATA$ratio_SD) # gives a summery of a coloumn
# the SD of the ratio is around 1% of
mean.quratio = mean(SDATA$qu_ratio, na.rm = T) # calculate the mean
max.quratio = max(SDATA$qu_ratio, na.rm = T) # calculate the mean
# make a histogram and density plot
png('./Figures/histogram and kernel density plot.png')
hist(SDATA$qu_ratio, breaks = 5, freq = F, xlab = 'CTXm-16s ratio', xlim = c(0,20), ylim = c(0, 1), ylab = 'Probability', main = 'Histogram of CTXm abundance with Kernel Density Plot')
lines(density(SDATA$qu_ratio, na.rm = T, from = 0, to = max.quratio))
dev.off()
########
# small table version of SDATA
#names(SDATA)[90:126] # those are all the antibiotics in action
DF1 <- SDATA %>%
dplyr::select(num,qu_ratio,Tdiff,RectalDate,esbl_act,broad_spec,
Piperacillin.tazobactam,Vancomycin,isoniazid,Levofloxacin,
Meropenem,pyrazinamide,Rifampicin,Ampicillin,Oxacillin,
Ceftriaxone,Ceftazidime)
# replace all NA by 0
DF1[is.na(DF1)] <- 0
# remove the qu_ratio over 100
DF1 <- DF1[-which(max(DF1$qu_ratio) == DF1$qu_ratio),]
DF1 <- DF1[-which(max(DF1$qu_ratio) == DF1$qu_ratio),]
# add the time since last measurement as predictor
# add a column with previous date
next.date <- c(DF1$RectalDate[2:(length(DF1$RectalDate))] , as.Date("2011-1-1"))
DF1$TdiffToNext <- next.date - DF1$RectalDate
# the next qu_ratio is what i want to predict
DF1$NextQuRatio = c(DF1$qu_ratio[2 : (nrow(DF1))], 0 )
#
first.meas = which(DF1$num == 0)
first.meas <- first.meas[2 : length(first.meas)] - 1
# Filter away first measurements
DF2 <- DF1[-first.meas,]
# Make new DF for regression
DF3 <- DF2 %>% dplyr::select(num,qu_ratio,esbl_act,broad_spec,
Piperacillin.tazobactam,Vancomycin,isoniazid,Levofloxacin,
Meropenem,pyrazinamide,Rifampicin,Ampicillin,Oxacillin,
Ceftriaxone,Ceftazidime,
TdiffToNext,NextQuRatio)
### Now perform different regressions
# Output: NextQuRatio -- Predicting Features: qu_ratio, esbl_act, broad_spec
DF_R1 <-  DF3 %>% dplyr::select(num,qu_ratio,broad_spec,NextQuRatio)
# Fit the NextQuRatio using the previous and broad_spec
fit.1 <- lm(DF_R1$NextQuRatio ~ DF_R1$broad_spec + DF_R1$qu_ratio)
fit.1
# graphical display
colors <- ifelse(DF_R1$broad_spec==1, "black", "gray")
plot(DF_R1$qu_ratio, DF_R1$NextQuRatio, xlab="Previous QuRatio", ylab="Next Qu",
col=colors, pch=20)
curve(cbind(1, 1, x) %*% coef(fit.1), add=TRUE, col="black")
curve(cbind(1, 0,x) %*% coef(fit.1), add=TRUE, col="gray")
# Output: NextQuRatio -- Predicting Features: qu_ratio, esbl_act, broad_spec
DF_R2 <-  DF3 %>% dplyr::select(qu_ratio,esbl_act,NextQuRatio)
# Fit the NextQuRatio using the previous and broad_spec
fit.2 <- lm(DF_R2$NextQuRatio ~ DF_R2$esbl_act + DF_R2$qu_ratio)
fit.2
# graphical display
colors <- ifelse(DF_R2$esbl_act==2, "black", "gray")
plot(DF_R2$qu_ratio, DF_R2$NextQuRatio, xlab="Previous QuRatio", ylab="Next Qu",
col=colors, pch=20)
curve(cbind(1, 1, x) %*% coef(fit.2), add=TRUE, col="black")
curve(cbind(1, 0,x) %*% coef(fit.2), add=TRUE, col="gray")
# allow for interactions: important because we expect 2nd variable to only be effective at non-zero esbl!
fit.3 <- lm(DF_R1$NextQuRatio ~ DF_R1$broad_spec + DF_R1$qu_ratio + DF_R1$broad_spec:DF_R1$qu_ratio)
fit.3
# graphical display
colors <- ifelse(DF_R1$broad_spec==1, "black", "gray")
plot(DF_R1$qu_ratio, DF_R1$NextQuRatio, xlab="Previous QuRatio", ylab="Next Qu",
col=colors, pch=20)
curve(cbind(1, 1, x, 1*x) %*% coef(fit.3), add=TRUE, col="black")
curve(cbind(1, 0,x, 0*x) %*% coef(fit.3), add=TRUE, col="gray")
# Output: NextQuRatio -- Predicting Features: qu_ratio, esbl_act, broad_spec, TdiffToNext
### play around with data cleaning
SDATA
